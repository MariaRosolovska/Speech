{"version":3,"sources":["App.js","index.js"],"names":["App","useState","time","text","timers","setTimers","rate","setRate","pitch","setPitch","voiceIndex","setVoiceIndex","useStopwatch","seconds","isRunning","start","reset","useSpeechSynthesis","speak","supported","speaking","voices","voice","doReset","useCallback","updateTimers","index","newTimers","useEffect","foundTimer","find","t","length","className","htmlFor","id","name","value","onChange","e","target","map","option","key","lang","type","min","max","step","timer","TimeSlot","onClick","setTime","setText","handleBlur","onchange","onBlur","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1012c2dd.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { useStopwatch } from 'react-timer-hook';\nimport './App.css';\n\nexport default function App() {\n  const [timers, setTimers] = useState([\n    {time:2, text: 'hello'},\n    {time:5, text: 'this is my message'},\n    {time:9, text: 'what\\`s up'},\n  ]);\n  const [rate, setRate] = useState(1.0);\n  const [pitch, setPitch] = useState( 1.0);\n  const [voiceIndex, setVoiceIndex] = useState(null);\n  const {seconds, isRunning, start, reset} = useStopwatch({});\n  const {speak, speaking, supported, voices} = useSpeechSynthesis();\n\n  const voice = voices[voiceIndex] || null;\n\n  const doReset = useCallback(() => reset(0, false), []);\n  // const doSpeak = useCallback((...p) => speak(...p), []);\n\n  useEffect(() => {\n    const foundTimer = timers.find(t => t.time === seconds);\n    if(foundTimer) speak({ text: foundTimer.text, voice, rate, pitch })\n\n    if(seconds > timers[timers.length - 1].time) doReset();\n  }, [seconds]);\n\n  function updateTimers(index, time, text) {\n    const newTimers = [...timers];\n    newTimers[index].time = time;\n    newTimers[index].text = text;\n\n    setTimers(newTimers);\n  }\n\n  function addTimer() {\n    const newTimers = [...timers, { time: 100, text: 'yo'}];\n    setTimers(newTimers);\n  }\n\n  if(!supported) return <div>Your browser is not supported yet</div>\n\n  return (\n    <div className=\"app\">\n      <h2>Talk the Talk</h2>\n\n      <form>\n        <label htmlFor='voice'>Voice</label>\n        <select id='voice' name='voice' value={voiceIndex || ''} onChange={(e) => setVoiceIndex(e.target.value)}>\n            <option value=''>Default</option>\n            {voices.map((option, index) => (\n              <option key={index} value={index}>\n                {`${option.lang} - ${option.name}`}\n              </option>\n            ))}\n        </select>\n      </form>\n\n      <form className='ranges'>\n        <label htmlFor='rate'>Rate</label>\n          <input type='range' name='rate' min=\"0.1\" max=\"2\" value={rate} step=\"0.1\" onChange={(e) => setRate(e.target.value)}/>\n        \n      </form>\n\n      <form>\n        <label htmlFor='pitch'>Pitch</label>\n          <input type='range' name='pitch' min=\"0.1\" max=\"2\" value={pitch} step=\"0.1\" onChange={(e) => setPitch(e.target.value)}/>\n      </form>\n\n      <div className=\"timers\">\n        {/* timers go here */}\n        {timers.map((timer, index) => (\n          <TimeSlot key={index} index={index} timer={timer} updateTimers={updateTimers} />\n        ))}\n        \n        <button className=\"add-button\" onClick={addTimer}>Add</button>\n      </div>\n\n      {/* seconds */}\n      <h2>{seconds}</h2>\n\n      {/* buttons */}\n      <div className=\"buttons\">\n        {!isRunning && (\n          <button className=\"start-button\" onClick={start}>Start</button>\n        )}\n        {isRunning && (\n          <button className=\"stop-button\" onClick={doReset}>Stop</button>\n        )}\n      </div>\n\n    </div>\n  );\n}\n\n\nfunction TimeSlot({ index, timer, updateTimers}) {\n  const [ time, setTime] = useState(timer.time);\n  const [text, setText] = useState(timer.text);\n\n  function handleBlur() {\n    updateTimers(index, time, text);\n  }\n\n  return (\n    <form className=\"timer\" key={index}>\n      <input type=\"number\" value={time} onchange={(e) => setTime(e.target.value)}  onBlur={handleBlur}/>\n      <input type=\"text\" value={text} onchange={(e) => setText(e.target.value)} onBlur={handleBlur}/>\n   </form>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}